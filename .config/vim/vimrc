" Specify a directory for plugins
call plug#begin()
Plug 'ctrlpvim/ctrlp.vim'
Plug 'tpope/vim-unimpaired'
" Initialize plugin system
call plug#end()

" tabs are the devil
set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4

" more risky, but cleaner
set nobackup
set noswapfile
set nowritebackup
set hidden
filetype plugin on

"no gui
set guioptions-=m  "remove menu bar
set guioptions-=T  "remove toolbar
set guioptions-=r  "remove right-hand scroll bar
set guioptions-=L  "remove left-hand scroll bar
set laststatus=2

" set incsearch
set incsearch

"This unsets the "last search pattern" register by hitting return
nnoremap <CR> :noh<CR><CR>

" high contrast for streaming, etc.
" colors for syntax check
set termguicolors
set background=dark
colorscheme gruvbox

" map leader key
let mapleader = ","

"To use `ALT+{h,j,k,l}` to navigate windows from any mode: >
tnoremap <A-h> <C-\><C-N><C-w>h
tnoremap <A-j> <C-\><C-N><C-w>j
tnoremap <A-k> <C-\><C-N><C-w>k
tnoremap <A-l> <C-\><C-N><C-w>l
inoremap <A-h> <C-\><C-N><C-w>h
inoremap <A-j> <C-\><C-N><C-w>j
inoremap <A-k> <C-\><C-N><C-w>k
inoremap <A-l> <C-\><C-N><C-w>l
nnoremap <A-h> <C-w>h
nnoremap <A-j> <C-w>j
nnoremap <A-k> <C-w>k
nnoremap <A-l> <C-w>l

" exit terminal mode with ESC
tnoremap <Esc> <C-\><C-n>

" CtrlP plugin
if executable('rg')
    let g:ctrlp_user_command = 'rg --files --color=never'
    let g:ctrlp_use_caching = 0
    set grepprg=rg\ --vimgrep\ --no-heading
    set grepformat=%f:%l:%c:%m,%f:%l:%m
endif
"  set only CWD for searching
let g:ctrlp_working_path_mode = ''
" Change mapping
let g:ctrlp_map = '<Leader>p'
" Open buffer with CtrlP
nnoremap <Leader>b :CtrlPBuffer<CR>

" shift + insert to paste
map <silent> <S-Insert> "+p
imap <silent> <S-Insert> <Esc>"+pa

augroup Linting
	au!
	au BufWritePost *.c,*.cpp silent make! <afile> | silent redraw!
	au QuickFixCmdPost [^l]* cwindow
augroup END

" grep into quickfix
function! Grep(...)
    return system(join([&grepprg] + [join(a:000, ' ')], ' '))
endfunction
command! -nargs=+ -bar Grep cgetexpr Grep(<f-args>)
command! -nargs=+ -bar LGrep lgetexpr Grep(<f-args>)
cnoreabbrev <expr> grep (getcmdtype() ==# ':' && getcmdline() ==# 'grep') ? 'Grep' : 'grep'

" swap tjump key for global
nnoremap <c-]> g<c-]>
vnoremap <c-]> g<c-]>
nnoremap g<c-]> <c-]>
vnoremap g<c-]> <c-]>

" status line
set statusline=
set statusline+=%#DiffAdd#%{(mode()=='n')?'\ \ NORMAL\ ':''}
set statusline+=%#DiffChange#%{(mode()=='i')?'\ \ INSERT\ ':''}
set statusline+=%#DiffDelete#%{(mode()=='r')?'\ \ RPLACE\ ':''}
set statusline+=%#Cursor#%{(mode()=='v')?'\ \ VISUAL\ ':''}
set statusline+=\ %n\           " buffer number
set statusline+=%#Visual#       " colour
set statusline+=%{&paste?'\ PASTE\ ':''}
set statusline+=%{&spell?'\ SPELL\ ':''}
set statusline+=%#CursorIM#     " colour
set statusline+=%R                        " readonly flag
set statusline+=%M                        " modified [+] flag
set statusline+=%#Cursor#               " colour
set statusline+=%#CursorLine#     " colour
set statusline+=\ %t\                   " short file name
set statusline+=%=                          " right align
set statusline+=%#CursorLine#   " colour
set statusline+=\ %Y\                   " file type
set statusline+=%#CursorIM#     " colour
set statusline+=\ %3l:%-2c\         " line + column
set statusline+=%#Cursor#       " colour
set statusline+=\ %3p%%\                " percentage
